stages:
  - test
  - build
  - deploy

workflow:
  rules:
    - if: $CI_COMMIT_MESSAGE =~ /^wip:/
      when: never
    - if: $CI_COMMIT_MESSAGE =~ /ci:skip-all/
      when: never
    - when: always

before_script:
  - cp .env.example .env
  - export

lint:
  stage: test
  rules:
    - if: $CI_COMMIT_MESSAGE =~ /ci:skip-lint/
      when: never
    - changes:
      - console/**/*
      - personal/**/*
      - .eslintrc.js
      - .eslintignore
      - .prettierrc
      when: always
    - when: never
  image: node:10
  script:
    # for --network-concurrency see https://github.com/yarnpkg/yarn/issues/7212
    - yarn --network-concurrency 1
    - yarn lint --no-fix
  cache:
    key: nodejs
    paths:
      - node_modules

code_style:
  stage: test
  rules:
    - if: $CI_COMMIT_MESSAGE =~ /ci:skip-code-style/
      when: never
    - changes:
      - app/**/*
      - config/**/*
      - database/**/*
      - resources/lang/**/*
      - routes/**/*
      - tests/**/*
      - ecs.yml
      - phpstan.neon
      when: always
    - when: never
  image: xxx
  script:
    - php --info | grep memory_limit
    - composer install --ignore-platform-reqs --no-progress --no-suggest --prefer-dist
    - vendor/bin/ecs check --no-progress-bar -- app config database tests resources/lang
    - vendor/bin/phpstan analyze --level 2 -- app tests
  cache:
    key: php
    paths:
      - vendor

unit_test:
  stage: test
  rules:
    - changes:
      - app/**/*
      - database/**/*
      - routes/**/*
      - tests/**/*
      - composer.lock
      - phpunit.xml
      when: always
    - when: never
  image: azamatx/taxi-php
  script:
    - php --ini
    - composer install --ignore-platform-reqs --no-progress --no-suggest --prefer-dist
    - php artisan key:generate
    - php artisan jwt:secret
    - vendor/bin/phpunit --stop-on-error
  cache:
    key: php
    paths:
      - vendor

.build_tpl: &build_def
  stage: build
  image: node:10
  script:
    # for --network-concurrency see https://github.com/yarnpkg/yarn/issues/7212
    - yarn --network-concurrency 1
    - yarn build
    - yarn production
  artifacts:
    paths:
      - public/my
      - public/console
      - public/js
      - public/css
      - public/img
      - public/fonts
  cache:
    key: nodejs
    paths:
      - node_modules

.deploy_tpl: &deploy_def
  image: dotsunited/git-ftp
  stage: deploy
  script:
    - cp .git-ftp-include.txt .git-ftp-include
    - git ftp push -f --user $DEPLOY_USER --key $DEPLOY_KEY --insecure sftp://$DEPLOY_HOST/$DEPLOY_PATH
  cache: {}

.restart: &restart_def
  image: xxx
  stage: .post
  script:
    - 'eval $(ssh-agent -s) && chmod 0400 $DEPLOY_KEY && ssh-add $DEPLOY_KEY'
    - 'mkdir -p ~/.ssh && [[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - envoy run restart --server=$CI_ENVIRONMENT_SLUG
  cache: {}

.variables_staging: &variables_staging
  variables:
    DEPLOY_HOST: '$DEPLOY_HOST_STAGING'
    DEPLOY_USER: '$DEPLOY_USER_STAGING'
    DEPLOY_PATH: '$DEPLOY_PATH_STAGING'
    APP_ENV: 'staging'
    APP_URL: '$APP_URL_STAGING'
    STRIPE_KEY: '$STRIPE_KEY_STAGING'
    VUE_APP_GOOGLE_CALENDAR_CLIENT_ID: '$GOOGLE_CALENDAR_CLIENT_ID_STAGING'
    VUE_APP_GOOGLE_MAP_KEY: '$GOOGLE_MAP_KEY_STAGING'

build_staging:
  <<: *build_def
  <<: *variables_staging
  rules:
    - if: '$CI_COMMIT_REF_NAME != "master" && $CI_PIPELINE_SOURCE != "merge_request_event"'
      when: manual

deploy_staging:
  <<: *deploy_def
  <<: *variables_staging
  rules:
    - if: '$CI_COMMIT_REF_NAME != "master" && $CI_PIPELINE_SOURCE != "merge_request_event"'
      when: on_success

restart_staging:
  <<: *restart_def
  <<: *variables_staging
  environment:
    name: staging
  rules:
    - if: '$CI_COMMIT_REF_NAME != "master" && $CI_PIPELINE_SOURCE != "merge_request_event"'
      when: on_success

.variables_production: &variables_production
  variables:
    DEPLOY_HOST: '$DEPLOY_HOST_PRODUCTION'
    DEPLOY_USER: '$DEPLOY_USER_PRODUCTION'
    DEPLOY_PATH: '$DEPLOY_PATH_PRODUCTION'
    APP_ENV: 'production'
    APP_URL: '$APP_URL_PRODUCTION'
    STRIPE_KEY: '$STRIPE_KEY_PRODUCTION'
    VUE_APP_GOOGLE_CALENDAR_CLIENT_ID: '$GOOGLE_CALENDAR_CLIENT_ID_PRODUCTION'
    VUE_APP_GOOGLE_MAP_KEY: '$GOOGLE_MAP_KEY_PRODUCTION'

build_production:
  <<: *build_def
  <<: *variables_production
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master" && $CI_PIPELINE_SOURCE != "merge_request_event"'
      when: on_success

deploy_production:
  <<: *deploy_def
  <<: *variables_production
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master" && $CI_PIPELINE_SOURCE != "merge_request_event"'
      when: on_success

restart_production:
  <<: *restart_def
  <<: *variables_production
  environment:
    name: production
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master" && $CI_PIPELINE_SOURCE != "merge_request_event"'
      when: on_success
